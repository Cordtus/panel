"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IframeAminoSigner = exports.IframeDirectSigner = void 0;
const utils_1 = require("./utils");
class IframeDirectSigner {
    chainId;
    constructor(chainId) {
        this.chainId = chainId;
    }
    async getAccounts(...params) {
        return await (0, utils_1.sendAndListenOnce)({
            method: 'signer:getAccounts',
            params,
            chainId: this.chainId,
            signType: 'direct',
        }, async (data) => {
            if (data.type === 'success') {
                return data.response;
            }
            else {
                throw new Error(data.error);
            }
        });
    }
    async signDirect(...params) {
        return await (0, utils_1.sendAndListenOnce)({
            method: 'signer:signDirect',
            params,
            chainId: this.chainId,
            signType: 'direct',
        }, async (data) => {
            if (data.type === 'success') {
                return data.response;
            }
            else {
                throw new Error(data.error);
            }
        });
    }
}
exports.IframeDirectSigner = IframeDirectSigner;
class IframeAminoSigner {
    chainId;
    constructor(chainId) {
        this.chainId = chainId;
    }
    async getAccounts(...params) {
        return await (0, utils_1.sendAndListenOnce)({
            method: 'signer:getAccounts',
            params,
            chainId: this.chainId,
            signType: 'amino',
        }, async (data) => {
            if (data.type === 'success') {
                return data.response;
            }
            else {
                throw new Error(data.error);
            }
        });
    }
    async signAmino(...params) {
        return await (0, utils_1.sendAndListenOnce)({
            method: 'signer:signAmino',
            params,
            chainId: this.chainId,
            signType: 'amino',
        }, async (data) => {
            if (data.type === 'success') {
                return data.response;
            }
            else {
                throw new Error(data.error);
            }
        });
    }
}
exports.IframeAminoSigner = IframeAminoSigner;
//# sourceMappingURL=signers.js.map